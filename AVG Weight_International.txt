#rm(list=ls())

library(gdata)
##### For generating Average weights for Inner validation of International Indices ########

fpath_1<-"Path of csv file containing international indices"
fpath_2<-"Path of csv file containing international indices and their average weight"
list_of_index<- read.csv( paste(fpath_1,"list.csv",sep = ""))

number_of_obs=160

mean_vector=c()
vector_obs=c()
for (i in 1:number_of_obs)
  vector_obs[i] <- paste("Obs_",i)  

for(i in 1:number_of_obs)
{ 
  mean_matrix=matrix(0,number_of_obs,4)
  wt=read.csv(paste(fpath_1,"Weighted/","wt_",i,".csv",sep = ""))
  wt=wt[,-1]
  mean_vector=append(mean_vector,mean(upperTriangle(wt, diag = FALSE)))
}
mean_matrix[,1]=vector_obs
mean_matrix[,2]=mean_vector
mean_matrix[1,3]=min(mean_vector)
mean_matrix[1,4]=max(mean_vector)
header<-c("Observations","Means","Minimum","Maximum")
colnames(mean_matrix)<-c(header)
write.csv(mean_matrix,paste(fpath_2,"obs_mean.csv",sep=""))


##### For generating Average weights for External validation of International Indices ########

fpath_1<-"G:/Study Materials/Semstr-4/BRP/Project/Refined Files/BRP files/EXTERNAL VALIDATION/INTERNATIONAL INDICES/"
fpath_2<-"G:/Study Materials/Semstr-4/BRP/Project/Refined Files/BRP files/AVERAGE WEIGHT/INTERNATIONAL INDICES/"
list_of_index<- read.csv( paste(fpath_1,"list.csv",sep = ""))

number_of_obs=1

mean_vector=c()
vector_obs=c()

  i=1 
  vector_obs[i] <- paste("Obs_",i) 
  mean_matrix=matrix(0,number_of_obs,2)
  wt=read.csv(paste(fpath_1,"Weighted/","wt_",i,".csv",sep = ""))
  wt=wt[,-1]
  mean_vector=append(mean_vector,mean(upperTriangle(wt, diag = FALSE)))

mean_matrix[,1]=vector_obs
mean_matrix[,2]=mean_vector

header<-c("Observations","Means")
colnames(mean_matrix)<-c(header)
write.csv(mean_matrix,paste(fpath_2,"obs_mean_external.csv",sep=""))


########## Levene test ##########
library(Rcmdr)
library(reshape2)

y<-c(mean_40[,3],mean_60[1,3])

sample<-as.data.frame(cbind(mean_40[,3],mean_60[1,3]))
dataset<-melt(sample)

leveneTest(value~variable,dataset )
